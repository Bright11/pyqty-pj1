# Form implementation generated from reading ui file 'additemui.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QTableWidget, QTableWidgetItem, QHeaderView, QAbstractItemView, QMessageBox,QWidget
from PyQt6.QtGui import QFont,QIcon,QIntValidator
from PyQt6.QtCore import Qt, QSize, QRect, QPoint, QEvent

from Textslider import Slider, count, text,txt
from query_data import itemfetch_data
# MESSAGE


from connection import databasename
import sqlite3


class Ui_MainWindow(QWidget):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1600, 700)
        # logo
        MainWindow.setWindowIcon(QIcon('logo/logo.jpeg'))
        
        
        self.addwindowpage=MainWindow
        
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(30, 0, 1311, 91))
        self.frame.setMouseTracking(False)
        self.frame.setTabletTracking(False)
        self.frame.setStyleSheet("QFrame{\n"
"background-color:blue;\n"
"}")
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.Panel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.frame.setLineWidth(10)
        self.frame.setMidLineWidth(10)
        self.frame.setObjectName("frame")
        self.label_slider = QtWidgets.QLabel(parent=self.frame)
        self.label_slider.setGeometry(QtCore.QRect(30, 30, 1311, 40))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setPointSize(26)
        font.setBold(False)
        font.setWeight(50)
        self.label_slider.setFont(QFont("sanserif",20))
        self.label_slider.setStyleSheet("QLabel{\n"
"color:rgb(255, 255, 255)\n"
"}")
        self.label_slider.setObjectName("label_slider")
        self.frame_2 = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(20, 100, 1311, 61))
        self.frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayoutWidget = QtWidgets.QWidget(parent=self.frame_2)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 0, 1301, 61))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.add_btn = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget)
        self.add_btn.setStyleSheet("QPushButton{\n"
"\n"
"background-color:blue;\n"
"color:white;\n"
"}")
        self.add_btn.setObjectName("add_btn")
        self.add_btn.setFont(QFont("sanserif",18))
        self.horizontalLayout_2.addWidget(self.add_btn)
        self.sale_btn = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.sale_btn.setFont(QFont("sanserif",18))
        self.sale_btn.setStyleSheet("QPushButton{\n"
"color:white;\n"
"background-color:blue;\n"
"\n"
"}")
        self.sale_btn.setObjectName("sale_btn")
        self.horizontalLayout_2.addWidget(self.sale_btn)
        self.users_btn = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.users_btn.setFont(QFont("sanserif",18))
        self.users_btn.setStyleSheet("QPushButton{\n"
"color:white;\n"
"background-color:blue;\n"
"\n"
"}")
        self.users_btn.setObjectName("users_btn")
        self.horizontalLayout_2.addWidget(self.users_btn)
        self.customer_btn = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.customer_btn.setFont(QFont("sanserif",18))
        self.customer_btn.setStyleSheet("QPushButton{\n"
"color:white;\n"
"background-color:blue;\n"
"\n"
"}")
        self.customer_btn.setObjectName("customer_btn")
        self.horizontalLayout_2.addWidget(self.customer_btn)
        self.workers_btn = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.workers_btn.setFont(QFont("sanserif",18))
        self.workers_btn.setStyleSheet("QPushButton{\n"
"color:white;\n"
"background-color:blue;\n"
"\n"
"}")
        self.workers_btn.setObjectName("workers_btn")
        self.horizontalLayout_2.addWidget(self.workers_btn)
        self.expensive_btn = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.expensive_btn.setFont(QFont("sanserif",18))
        self.expensive_btn.setStyleSheet("QPushButton{\n"
"color:white;\n"
"background-color:blue;\n"
"\n"
"}")
        self.expensive_btn.setObjectName("expensive_btn")
        self.horizontalLayout_2.addWidget(self.expensive_btn)
        self.riders_btn = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.riders_btn.setFont(QFont("sanserif",18))
        self.riders_btn.setStyleSheet("QPushButton{\n"
"color:white;\n"
"background-color:blue;\n"
"\n"
"}")
        self.riders_btn.setObjectName("riders_btn")
        self.horizontalLayout_2.addWidget(self.riders_btn)
        self.calculator_btn = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.calculator_btn.setFont(QFont("sanserif",18))
        self.calculator_btn.setStyleSheet("QPushButton{\n"
"color:white;\n"
"background-color:blue;\n"
"\n"
"}")
        self.calculator_btn.setObjectName("calculator_btn")
        self.horizontalLayout_2.addWidget(self.calculator_btn)
        self.frame_3 = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame_3.setGeometry(QtCore.QRect(30, 170, 371, 431))
        self.frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(parent=self.frame_3)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(-1, 0, 361, 41))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_2 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_3.addWidget(self.label_2)
        self.lineEdit_name = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_name.setFont(font)
        self.lineEdit_name.setObjectName("lineEdit_name")
        self.horizontalLayout_3.addWidget(self.lineEdit_name)
        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(parent=self.frame_3)
        self.horizontalLayoutWidget_3.setGeometry(QtCore.QRect(0, 40, 361, 41))
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_3 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_3)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_4.addWidget(self.label_3)
        self.lineEdit_voltage = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget_3)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_voltage.setFont(font)
        self.lineEdit_voltage.setObjectName("lineEdit_voltage")
        self.horizontalLayout_4.addWidget(self.lineEdit_voltage)
        self.horizontalLayoutWidget_4 = QtWidgets.QWidget(parent=self.frame_3)
        self.horizontalLayoutWidget_4.setGeometry(QtCore.QRect(0, 80, 361, 51))
        self.horizontalLayoutWidget_4.setObjectName("horizontalLayoutWidget_4")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_4)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_4 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_4)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_5.addWidget(self.label_4)
        self.lineEdit_cat = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget_4)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_cat.setFont(font)
        self.lineEdit_cat.setObjectName("lineEdit_cat")
        self.horizontalLayout_5.addWidget(self.lineEdit_cat)
        self.horizontalLayoutWidget_5 = QtWidgets.QWidget(parent=self.frame_3)
        self.horizontalLayoutWidget_5.setGeometry(QtCore.QRect(0, 130, 361, 51))
        self.horizontalLayoutWidget_5.setObjectName("horizontalLayoutWidget_5")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_5)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_5 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_5)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_6.addWidget(self.label_5)
        self.lineEdit_price_bought = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget_5)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_price_bought.setFont(font)
        self.lineEdit_price_bought.setObjectName("lineEdit_price_bought")
        self.horizontalLayout_6.addWidget(self.lineEdit_price_bought)
        self.horizontalLayoutWidget_6 = QtWidgets.QWidget(parent=self.frame_3)
        self.horizontalLayoutWidget_6.setGeometry(QtCore.QRect(0, 220, 361, 51))
        self.horizontalLayoutWidget_6.setObjectName("horizontalLayoutWidget_6")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_6)
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.label_6 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_6)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_7.addWidget(self.label_6)
        self.lineEdit_qty = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget_6)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_qty.setFont(font)
        self.lineEdit_qty.setObjectName("lineEdit_qty")
        self.horizontalLayout_7.addWidget(self.lineEdit_qty)
        self.horizontalLayoutWidget_7 = QtWidgets.QWidget(parent=self.frame_3)
        self.horizontalLayoutWidget_7.setGeometry(QtCore.QRect(0, 280, 361, 51))
        self.horizontalLayoutWidget_7.setObjectName("horizontalLayoutWidget_7")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_7)
        self.horizontalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.label_7 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_7)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_8.addWidget(self.label_7)
        self.lineEdit_qrcode = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget_7)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_qrcode.setFont(font)
        self.lineEdit_qrcode.setObjectName("lineEdit_qrcode")
        self.horizontalLayout_8.addWidget(self.lineEdit_qrcode)
        self.verticalLayoutWidget = QtWidgets.QWidget(parent=self.frame_3)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(0, 340, 361, 41))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.save_btn = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.save_btn.setFont(QFont("sanserif",18))
        self.save_btn.setStyleSheet("QPushButton{\n"
"background-color:blue;\n"
"color:white;\n"
"}")
        self.save_btn.setObjectName("save_btn")
        self.verticalLayout.addWidget(self.save_btn)
        self.update_btn = QtWidgets.QPushButton(parent=self.frame_3)
        self.update_btn.setGeometry(QtCore.QRect(0, 390, 359, 27))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.update_btn.setFont(QFont("sanserif",18))
        self.update_btn.setStyleSheet("QPushButton{\n"
"background-color:blue;\n"
"color:white;\n"
"}")
        self.update_btn.setObjectName("update_btn")
        
        self.update_btn.hide()
        
        
        self.horizontalLayoutWidget_9 = QtWidgets.QWidget(parent=self.frame_3)
        self.horizontalLayoutWidget_9.setGeometry(QtCore.QRect(0, 180, 361, 51))
        self.horizontalLayoutWidget_9.setObjectName("horizontalLayoutWidget_9")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_9)
        self.horizontalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.label_8 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_9)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_10.addWidget(self.label_8)
        self.lineEdit_price = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget_9)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_price.setFont(font)
        self.lineEdit_price.setObjectName("lineEdit_price")
        self.horizontalLayout_10.addWidget(self.lineEdit_price)
        self.frame_table = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame_table.setGeometry(QtCore.QRect(439, 220, 891, 351))
        self.frame_table.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_table.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_table.setObjectName("frame_table")
        self.frame_4 = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame_4.setGeometry(QtCore.QRect(610, 170, 481, 61))
        self.frame_4.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_4.setObjectName("frame_4")
        self.horizontalLayoutWidget_8 = QtWidgets.QWidget(parent=self.frame_4)
        self.horizontalLayoutWidget_8.setGeometry(QtCore.QRect(0, 0, 481, 41))
        self.horizontalLayoutWidget_8.setObjectName("horizontalLayoutWidget_8")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_8)
        self.horizontalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.lineEdit_search = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget_8)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_search.setFont(font)
        self.lineEdit_search.setObjectName("lineEdit_search")
        self.horizontalLayout_9.addWidget(self.lineEdit_search)
        self.search_btn = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget_8)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.search_btn.setFont(QFont("sanserif",18))
        self.search_btn.setStyleSheet("QPushButton{\n"
"background-color:blue;\n"
"color:white;\n"
"}")
        self.search_btn.setObjectName("search_btn")
        self.horizontalLayout_9.addWidget(self.search_btn)
        self.frame_5 = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame_5.setGeometry(QtCore.QRect(750, 580, 211, 61))
        self.frame_5.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_5.setObjectName("frame_5")
        self.clear_table_btn = QtWidgets.QPushButton(parent=self.frame_5)
        self.clear_table_btn.setGeometry(QtCore.QRect(0, 20, 201, 23))
        self.clear_table_btn.setStyleSheet("QPushButton{\n"
"background-color:blue;\n"
"color:white\n"
"}\n"
"\n"
"")
        self.clear_table_btn.setObjectName("clear_table_btn")
        
        self.clear_table_btn.setFont(QFont("sanserif",18))
        
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        # disabled string in qty
        self.lineEdit_qty.setValidator(QIntValidator())
        # disabled string in price
        self.lineEdit_price.setValidator(QIntValidator())
        # disabled string in qrcode
        self.lineEdit_qrcode.setValidator(QIntValidator())
        # buought price
        self.lineEdit_price_bought.setValidator(QIntValidator())

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Add Item Window"))
        self.label_slider.setText(_translate("MainWindow", "TextLabel"))
        self.add_btn.setText(_translate("MainWindow", "Add Item"))
        self.sale_btn.setText(_translate("MainWindow", "Sales"))
        self.users_btn.setText(_translate("MainWindow", "CSV"))
        self.customer_btn.setText(_translate("MainWindow", "Customers"))
        self.workers_btn.setText(_translate("MainWindow", "Workers"))
        self.expensive_btn.setText(_translate("MainWindow", "Expenses"))
        self.riders_btn.setText(_translate("MainWindow", "Riders"))
        self.calculator_btn.setText(_translate("MainWindow", "Calculator"))
        self.label_2.setText(_translate("MainWindow", "Name    "))
        self.label_3.setText(_translate("MainWindow", "Voltage"))
        self.label_4.setText(_translate("MainWindow", "Category"))
        self.label_5.setText(_translate("MainWindow", "Price bought"))
        self.label_6.setText(_translate("MainWindow", "Qty        "))
        self.label_7.setText(_translate("MainWindow", "Qrcode"))
        self.save_btn.setText(_translate("MainWindow", "Save"))
        self.update_btn.setText(_translate("MainWindow", "Update"))
        self.label_8.setText(_translate("MainWindow", "Sales Price"))
        self.search_btn.setText(_translate("MainWindow", "Search"))
        self.clear_table_btn.setText(_translate("MainWindow", "Clear Table"))

        self.workers_btn.clicked.connect(self.openworkerspages)
        
        self.customer_btn.clicked.connect(self.customaerspages)
        self.sale_btn.clicked.connect(self.salespages)
        self.save_btn.clicked.connect(self.add_data)
        self.update_btn.clicked.connect(self.update_data)
        
        self.search_btn.clicked.connect(self.search_data)
        self.slider()
        self.riders_btn.clicked.connect(self.openriderpage)
        
        self.expensive_btn.clicked.connect(self.expensespages)
        self.create_item_table()
        
        self.calculator_btn.clicked.connect(self.opencalculate)
        
        self.clear_table_btn.clicked.connect(self.reset_tabel)
        
        self.users_btn.clicked.connect(self.opencsv)
        

# getting
    def create_item_table(self):
            self.item_table=QTableWidget(self.frame_table)
            self.item_table.setColumnCount(8)
            self.item_table.move(0,0)
            self.item_table.resize(891,361)
            self.item_table.setEditTriggers(QAbstractItemView.EditTrigger.NoEditTriggers)
            self.item_table.setSelectionBehavior(QAbstractItemView.SelectionBehavior.SelectRows)
        #     self.item_table.setSelectionBehavior(QAbstractItemView.SelectionBehavior.SelectColumns)
            self.item_table.setShowGrid(False)
            self.item_table.setWordWrap(True)
            self.item_table.setCornerButtonEnabled(False)
            self.item_table.setColumnWidth(0,100)
            self.item_table.setAlternatingRowColors(True)
            self.item_table.verticalHeader().setVisible(False)
            self.item_table.horizontalHeader().setStretchLastSection(True)
            self.item_table.horizontalHeader().setSectionResizeMode(QHeaderView.ResizeMode.Stretch)
            self.item_table.setSortingEnabled(True)
            self.item_table.setStyleSheet("color:black")
            self.item_table.setFont(QFont("sanserif", 10))
        #     enable scroll
            self.item_table.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOn)
            self.item_table.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOn)
            self.item_table.setEditTriggers(QAbstractItemView.EditTrigger.NoEditTriggers)
           
            self.item_table.setHorizontalHeaderLabels(['ID','Name','Category','Selling Price',"bougt price",'Qty','Qrcode','Voltage'])
        #     styling horizontalheader
            self.item_table.horizontalHeader().setStyleSheet("QHeaderView::section{background-color:black; color:white; font-size:15px}")
            
            self.fetch_items()
            
            self.item_table.itemClicked.connect(self.get_update_data)
    
    def fetch_items(self):
           rows=itemfetch_data()
           self.item_table.setRowCount(len(rows))
           for item,data in enumerate(rows):
                   self.item_table.setItem(item,0,QTableWidgetItem(str(data[0])))
                   self.item_table.setItem(item, 1, QTableWidgetItem(str(data[1])))
                   self.item_table.setItem(item, 2, QTableWidgetItem(str(data[2])))
                   self.item_table.setItem(item, 3, QTableWidgetItem("₵" +str(data[3])))
                   self.item_table.setItem(item, 4, QTableWidgetItem("₵" +str(data[4])))
                   self.item_table.setItem(item, 5, QTableWidgetItem("Qty " + str(data[5])))
                   self.item_table.setItem(item, 6, QTableWidgetItem(str(data[6])))
                   self.item_table.setItem(item, 7, QTableWidgetItem(str(data[7])))
                   self.item_table.setItem(item, 8, QTableWidgetItem(str(data[8])))
                
#     adding data into database
    def add_data(self):
            if self.lineEdit_name.text()=="" or self.lineEdit_cat.text()=="" or self.lineEdit_price.text()=="" or self.lineEdit_price_bought.text()=="" or self.lineEdit_qty.text()=="" or self.lineEdit_qrcode.text()=="" or self.lineEdit_voltage.text()=="":
                    return QMessageBox.information(self, "Information", "All fields are required")
        #     check if qty is int
           
            conn=sqlite3.connect(databasename)
            cur=conn.cursor()
            values = (
                self.lineEdit_name.text().upper(),
                self.lineEdit_cat.text().upper(),
                self.lineEdit_price.text(),
                float(self.lineEdit_price_bought.text()),
                self.lineEdit_qty.text(),
                self.lineEdit_qrcode.text(),
                self.lineEdit_voltage.text(),
               
                
                        )
            cur.execute('''INSERT INTO items (name, category, price, bought_price, qty, qrcode,voltage) VALUES (?, ?, ?, ?, ?,?, ?)''', values)
            conn.commit()
            conn.close()
            self.fetch_items()
            self.clear_data()
            QMessageBox.information(self,"Information","Item added")
    
    
    def get_update_data(self,item):
            global item_id
            item_id = item.text()
            try:
                    conn = sqlite3.connect(databasename)
                    cur = conn.cursor()
                    cur.execute("SELECT * FROM items WHERE id=?", (item.text(),))
                    rows = cur.fetchall()
                    conn.close()
                    self.lineEdit_name.setText(rows[0][1])
                    self.lineEdit_voltage.setText(rows[0][7])
                    self.lineEdit_cat.setText(rows[0][2])
                    self.lineEdit_price.setText(rows[0][3])
                    self.lineEdit_price_bought.setText(rows[0][4])
                    self.lineEdit_qty.setText(rows[0][5])
                    self.lineEdit_qrcode.setText(rows[0][6])
                    self.save_btn.hide()
                    self.update_btn.show()
                    
                    
                    
                    
                    
            except Exception as e:
                   
                    QMessageBox.information(self, "Information", "Item not found")        
            
            
            
    def update_data(self):
            conn = sqlite3.connect(databasename)
            cur = conn.cursor()
            values = (
                self.lineEdit_name.text(),
                self.lineEdit_cat.text(),
                self.lineEdit_price.text(),
                self.lineEdit_price_bought.text(),
                self.lineEdit_qty.text(),
                self.lineEdit_qrcode.text(),
                self.lineEdit_voltage.text(),
                item_id
            )
            cur.execute('''UPDATE items SET name=?, category=?, price=?, bought_price=?, qty=?, qrcode=?, voltage=? WHERE id=?''', values)
            conn.commit()
            conn.close()
            self.fetch_items()
            self.clear_data()
            QMessageBox.information(self, "Information", "Item updated")
            self.update_btn.hide()
            self.save_btn.show()        
            
            
            
            

    def search_data(self):
            conn=sqlite3.connect(databasename)
            # Assuming `conn` is your SQLite database connection
            search_terms = ['%' + term + '%' for term in self.lineEdit_search.text().split()]  # Split search terms if separated by space

            for search_term in search_terms:
                  cur = conn.cursor()  
                  query = "SELECT rowid,* FROM items WHERE category LIKE ? OR name LIKE ?"
                  cur.execute(query, (search_term, search_term))
                  rows = cur.fetchall()
                 
            conn.close()
            self.item_table.clearContents()
            self.item_table.setRowCount(0)
            
            self.item_table.setRowCount(len(rows))
            for item,data in enumerate(rows):
                   self.item_table.setItem(item,0,QTableWidgetItem(str(data[0])))
                   self.item_table.setItem(item, 1, QTableWidgetItem(str(data[2])))
                   self.item_table.setItem(item, 2, QTableWidgetItem(str(data[3])))
                   self.item_table.setItem(item, 3, QTableWidgetItem("₵" +str(data[4])))
                   self.item_table.setItem(item, 4, QTableWidgetItem("₵" +str(data[5])))
                   self.item_table.setItem(item, 5, QTableWidgetItem("Qty " + str(data[6])))
                   self.item_table.setItem(item, 6, QTableWidgetItem(str(data[7])))
                   self.item_table.setItem(item, 7, QTableWidgetItem(str(data[8])))
                   self.item_table.setItem(item, 8, QTableWidgetItem(str(data[9])))
        


    def reset_tabel(self):
            self.fetch_items()
            
            
            
    def clear_data(self):
            self.lineEdit_name.clear()
            self.lineEdit_voltage.clear()
            self.lineEdit_cat.clear()
            self.lineEdit_price.clear()
            self.lineEdit_qty.clear()
            self.lineEdit_qrcode.clear()
            self.lineEdit_price_bought.clear()
                   
# slider
    def slider(self):
            global text,count
            Slider(self.label_slider)   
                
# page opening configuration

    def openworkerspages(self):
            from workers import Ui_MainWindow
            self.wworkerpage = QtWidgets.QMainWindow()
            self.openworker = Ui_MainWindow()
            self.openworker.setupUi(self.wworkerpage)
            self.addwindowpage.close()
            self.wworkerpage.show()
            
            
    def customaerspages(self):
            from customers import Ui_MainWindow
            
            self.customerpage = QtWidgets.QMainWindow()
            self.cuspage = Ui_MainWindow()
            self.cuspage.setupUi(self.customerpage)
            self.addwindowpage.close()
            self.customerpage.show()
            
            
    def salespages(self):
            from sales import Ui_MainWindow
            
            self.salespage = QtWidgets.QMainWindow()
            self.salesopen = Ui_MainWindow()
            self.salesopen.setupUi(self.salespage)
            self.addwindowpage.close()
            self.salespage.show()
            
            
            
    def expensespages(self):
            from expenses import Ui_MainWindow
            
            self.expensespage = QtWidgets.QMainWindow()
            self.expenses = Ui_MainWindow()
            self.expenses.setupUi(self.expensespage)
            self.addwindowpage.close()
            self.expensespage.show()
            
 
    def openriderpage(self):
            from riders import Ui_MainWindow
            
            self.riderpage = QtWidgets.QMainWindow()
            self.rider_p = Ui_MainWindow()
            self.rider_p.setupUi(self.riderpage)
            self.addwindowpage.close()
            self.riderpage.show()
            

    def opencalculate(self):
            from calculator import Ui_Dialog
            
            self.calculate = QtWidgets.QDialog()
            self.calculate_c = Ui_Dialog()
            self.calculate_c.setupUi(self.calculate)
        #     self.addwindowpage.close()
            self.calculate.show()
            
            

    def opencsv(self):
            from csvpages import Ui_Dialog
            
            self.csvfile = QtWidgets.QDialog()
            self.csfpage = Ui_Dialog()
            self.csfpage.setupUi(self.csvfile)
        #     self.addwindowpage.close()
            self.csvfile.show()
            

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
